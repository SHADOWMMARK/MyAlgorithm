Here is some what is about mine thought in these algorithms:
while we know about recursion, but some time because it is top->down methods, that means in the rule of time it is not so efficient as down->top methods:
a little example of the dp al:
every one knows the  Fibonacci Number, here is my solution towards the leetcode prob 509:
class Solution:
    def fib(self, n: int) -> int:
        dp=[0]*n
        if n==1:
            return 1
        elif n==0:
            return 0
        dp[0],dp[1]=1,1
        for i in range(2,n):
            dp[i]=dp[i-1]+dp[i-2]
        return dp[n-1]
